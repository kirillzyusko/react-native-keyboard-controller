name: 🍏 Build iOS

on:
  push:
    branches:
      - main
    paths:
      - ".github/workflows/build-ios.yml"
      - "react-native-keyboard-controller.podspec"
      - "ios/**"
      - "example/ios/**"
      - "yarn.lock"
      - "example/yarn.lock"
  pull_request:
    branches:
      - main
    paths:
      - ".github/workflows/build-ios.yml"
      - "react-native-keyboard-controller.podspec"
      - "ios/**"
      - "example/ios/**"
      - "yarn.lock"
      - "example/yarn.lock"

jobs:
  build:
    name: Build iOS Example App
    runs-on: macOS-14
    defaults:
      run:
        working-directory: example/ios
    steps:
      - uses: actions/checkout@v4

      - uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: "15.4"

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "dir=$(yarn cache dir)" >> $GITHUB_OUTPUT
      - name: Restore node_modules from cache
        uses: actions/cache@v4
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Install node_modules for example/
        run: yarn install --frozen-lockfile --cwd ..
      - name: Install root dependencies
        run: yarn install --frozen-lockfile --cwd ../..

      - name: Install Ccache
        uses: hendrikmuhs/ccache-action@v1.2
        with:
          max-size: 1.5G
          key: ${{ runner.os }}-ccache-example-ios
          create-symlink: true
      - name: Setup ccache behavior
        run: |
          echo "CCACHE_SLOPPINESS=clang_index_store,file_stat_matches,include_file_ctime,include_file_mtime,ivfsoverlay,pch_defines,modules,system_headers,time_macros" >> $GITHUB_ENV
          echo "CCACHE_FILECLONE=true" >> $GITHUB_ENV
          echo "CCACHE_DEPEND=true" >> $GITHUB_ENV
          echo "CCACHE_INODECACHE=true" >> $GITHUB_ENV

      - name: Setup Ruby (bundle)
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 2.7.6
          bundler-cache: true
          working-directory: example/ios

      - name: Restore Pods cache
        uses: actions/cache@v4
        with:
          path: |
            example/ios/Pods
            ~/Library/Caches/CocoaPods
            ~/.cocoapods
          key: ${{ runner.os }}-pods-${{ hashFiles('**/Podfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-pods-
      - name: Install Pods
        run: pod install
      - name: Install xcpretty
        run: gem install xcpretty
      - name: Build App
        run: "set -o pipefail && xcodebuild \
          CC=clang CPLUSPLUS=clang++ LD=clang LDPLUSPLUS=clang++ \
          -derivedDataPath build -UseModernBuildSystem=YES \
          -workspace KeyboardControllerExample.xcworkspace \
          -scheme KeyboardControllerExample \
          -sdk iphonesimulator \
          -configuration Debug \
          -destination 'platform=iOS Simulator,name=iPhone 11 Pro' \
          build \
          CODE_SIGNING_ALLOWED=NO | xcpretty"
