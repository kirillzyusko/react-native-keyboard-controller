- [x] in iOS simulator: enable slow animation, then open keyboard and while it's opening -> press return (circle on hide moves to final position and then animates, but should be animating from current position) - need to use prevKeyboardFrame to animate it from current position
- [ ] why duration * 0.6 on iOS? Maybe there is a more sophisticated way how to calculate that value?
- [-] check interactive keyboard (when you release a finger -> you need to animate from current position to final destination, so you need to check whether it has correct positioning - we rely on `onMove` in one corner case) <- uses easeInEaseOut so we can not use our SpringAnimation here - the best solution would be to create a common protocol (`KeyboardAnimation` - valueAt, timingAt), implement TimingAnimation and use generic KeyboardAnimation but create different instances based on animation type
- [x] verify that we use fallback mechanism when animation type is not SpringAnimation <- verified in interactive keyboard example
- [x] last frame of animation - circle is not achieving final frame (i. e. 291) and it looks like keyboard is slightly overlapping it <- min/max usage
