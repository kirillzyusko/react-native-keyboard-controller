"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[9220],{4627:(e,o,r)=>{r.r(o),r.d(o,{assets:()=>s,contentTitle:()=>i,default:()=>p,frontMatter:()=>a,metadata:()=>d,toc:()=>l});var n=r(4848),t=r(8453);const a={},i="KeyboardControllerView",d={id:"api/keyboard-controller-view",title:"KeyboardControllerView",description:"A plain react-native View with some additional methods and props. Used internally in KeyboardProvider",source:"@site/versioned_docs/version-1.0.0/api/keyboard-controller-view.md",sourceDirName:"api",slug:"/api/keyboard-controller-view",permalink:"/react-native-keyboard-controller/docs/1.0.0/api/keyboard-controller-view",draft:!1,unlisted:!1,editUrl:"https://github.com/kirillzyusko/react-native-keyboard-controller/tree/main/docs/versioned_docs/version-1.0.0/api/keyboard-controller-view.md",tags:[],version:"1.0.0",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"useReanimatedKeyboardAnimation",permalink:"/react-native-keyboard-controller/docs/1.0.0/api/hooks/use-reanimated-keyboard-animation"},next:{title:"KeyboardController",permalink:"/react-native-keyboard-controller/docs/1.0.0/api/keyboard-controller"}},s={},l=[{value:"Props",id:"props",level:2},{value:"<code>onKeyboardMove</code>",id:"onkeyboardmove",level:3},{value:'<code>statusBarTranslucent</code> <div class="label android"></div>',id:"statusbartranslucent-",level:3}];function c(e){const o={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",p:"p",...(0,t.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(o.h1,{id:"keyboardcontrollerview",children:"KeyboardControllerView"}),"\n",(0,n.jsxs)(o.p,{children:["A plain react-native ",(0,n.jsx)(o.code,{children:"View"})," with some additional methods and props. Used internally in ",(0,n.jsx)(o.a,{href:"/react-native-keyboard-controller/docs/1.0.0/api/keyboard-provider",children:"KeyboardProvider"})]}),"\n",(0,n.jsx)(o.h2,{id:"props",children:"Props"}),"\n",(0,n.jsx)(o.h3,{id:"onkeyboardmove",children:(0,n.jsx)(o.code,{children:"onKeyboardMove"})}),"\n",(0,n.jsx)(o.p,{children:"A callback function which is fired every time, when keyboard changes its position on the screen."}),"\n",(0,n.jsxs)(o.h3,{id:"statusbartranslucent-",children:[(0,n.jsx)(o.code,{children:"statusBarTranslucent"})," ",(0,n.jsx)("div",{class:"label android"})]}),"\n",(0,n.jsxs)(o.p,{children:["A boolean prop to indicate whether ",(0,n.jsx)(o.code,{children:"StatusBar"})," should be translucent on ",(0,n.jsx)(o.code,{children:"Android"})," or not."]})]})}function p(e={}){const{wrapper:o}={...(0,t.R)(),...e.components};return o?(0,n.jsx)(o,{...e,children:(0,n.jsx)(c,{...e})}):c(e)}},8453:(e,o,r)=>{r.d(o,{R:()=>i,x:()=>d});var n=r(6540);const t={},a=n.createContext(t);function i(e){const o=n.useContext(a);return n.useMemo((function(){return"function"==typeof e?e(o):{...o,...e}}),[o,e])}function d(e){let o;return o=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:i(e.components),n.createElement(a.Provider,{value:o},e.children)}}}]);