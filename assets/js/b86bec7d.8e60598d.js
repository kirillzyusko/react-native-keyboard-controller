"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[9843],{91281:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>i,contentTitle:()=>l,default:()=>b,frontMatter:()=>n,metadata:()=>s,toc:()=>d});var o=r(85893),a=r(11151);const n={slug:"set-enabled",title:"New setEnabled method",authors:["kirill"],tags:["react-native","keyboard","setEnabled"],keywords:["react-native-keyboard-controller","keyboard","setEnabled"]},l=void 0,s={permalink:"/react-native-keyboard-controller/blog/set-enabled",editUrl:"https://github.com/kirillzyusko/react-native-keyboard-controller/tree/main/docs/blog/2023-09-28-set-enabled/index.md",source:"@site/blog/2023-09-28-set-enabled/index.md",title:"New setEnabled method",description:"I'm thrilled to announce the release of react-native-keyboard-controller version 1.8.0. With this latest release, I introduce the useKeyboardController hook and setEnabled method, which allows for a gradual integration of the library into your project, enabling you to disable the module on specific screens as needed. This flexible feature ensures that your app's keyboard behavior remains seamless and user-friendly.",date:"2023-09-28T00:00:00.000Z",formattedDate:"September 28, 2023",tags:[{label:"react-native",permalink:"/react-native-keyboard-controller/blog/tags/react-native"},{label:"keyboard",permalink:"/react-native-keyboard-controller/blog/tags/keyboard"},{label:"setEnabled",permalink:"/react-native-keyboard-controller/blog/tags/set-enabled"}],readingTime:2.27,hasTruncateMarker:!0,authors:[{name:"Kirill Zyusko",title:"Library author",url:"https://github.com/kirillzyusko",imageURL:"https://github.com/kirillzyusko.png",key:"kirill"}],frontMatter:{slug:"set-enabled",title:"New setEnabled method",authors:["kirill"],tags:["react-native","keyboard","setEnabled"],keywords:["react-native-keyboard-controller","keyboard","setEnabled"]},unlisted:!1,prevItem:{title:"New release, new features, achieved milestones",permalink:"/react-native-keyboard-controller/blog/new-features-achieved-milestones"},nextItem:{title:"Introducing KeyboardAvoidingView - Elevating Your React Native UI Experience",permalink:"/react-native-keyboard-controller/blog/components"}},i={authorsImageUrls:[void 0]},d=[];function c(e){const t={code:"code",p:"p",...(0,a.a)(),...e.components};return(0,o.jsxs)(t.p,{children:["I'm thrilled to announce the release of ",(0,o.jsx)(t.code,{children:"react-native-keyboard-controller"})," version ",(0,o.jsx)(t.code,{children:"1.8.0"}),". With this latest release, I introduce the ",(0,o.jsx)(t.code,{children:"useKeyboardController"})," hook and ",(0,o.jsx)(t.code,{children:"setEnabled"})," method, which allows for a gradual integration of the library into your project, enabling you to disable the module on specific screens as needed. This flexible feature ensures that your app's keyboard behavior remains seamless and user-friendly."]})}function b(e={}){const{wrapper:t}={...(0,a.a)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(c,{...e})}):c(e)}},11151:(e,t,r)=>{r.d(t,{Z:()=>s,a:()=>l});var o=r(67294);const a={},n=o.createContext(a);function l(e){const t=o.useContext(n);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:l(e.components),o.createElement(n.Provider,{value:t},e.children)}}}]);