"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[9220],{34627:(e,r,o)=>{o.r(r),o.d(r,{assets:()=>s,contentTitle:()=>a,default:()=>p,frontMatter:()=>i,metadata:()=>d,toc:()=>l});var n=o(74848),t=o(28453);const i={},a="KeyboardControllerView",d={id:"api/keyboard-controller-view",title:"KeyboardControllerView",description:"A plain react-native View with some additional methods and props. Used internally in KeyboardProvider",source:"@site/versioned_docs/version-1.0.0/api/keyboard-controller-view.md",sourceDirName:"api",slug:"/api/keyboard-controller-view",permalink:"/react-native-keyboard-controller/pr-preview/pr-734/docs/1.0.0/api/keyboard-controller-view",draft:!1,unlisted:!1,editUrl:"https://github.com/kirillzyusko/react-native-keyboard-controller/tree/main/docs/versioned_docs/version-1.0.0/api/keyboard-controller-view.md",tags:[],version:"1.0.0",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"useReanimatedKeyboardAnimation",permalink:"/react-native-keyboard-controller/pr-preview/pr-734/docs/1.0.0/api/hooks/use-reanimated-keyboard-animation"},next:{title:"KeyboardController",permalink:"/react-native-keyboard-controller/pr-preview/pr-734/docs/1.0.0/api/keyboard-controller"}},s={},l=[{value:"Props",id:"props",level:2},{value:"<code>onKeyboardMove</code>",id:"onkeyboardmove",level:3},{value:'<code>statusBarTranslucent</code> <div class="label android"></div>',id:"statusbartranslucent-",level:3}];function c(e){const r={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",p:"p",...(0,t.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(r.h1,{id:"keyboardcontrollerview",children:"KeyboardControllerView"}),"\n",(0,n.jsxs)(r.p,{children:["A plain react-native ",(0,n.jsx)(r.code,{children:"View"})," with some additional methods and props. Used internally in ",(0,n.jsx)(r.a,{href:"/react-native-keyboard-controller/pr-preview/pr-734/docs/1.0.0/api/keyboard-provider",children:"KeyboardProvider"})]}),"\n",(0,n.jsx)(r.h2,{id:"props",children:"Props"}),"\n",(0,n.jsx)(r.h3,{id:"onkeyboardmove",children:(0,n.jsx)(r.code,{children:"onKeyboardMove"})}),"\n",(0,n.jsx)(r.p,{children:"A callback function which is fired every time, when keyboard changes its position on the screen."}),"\n",(0,n.jsxs)(r.h3,{id:"statusbartranslucent-",children:[(0,n.jsx)(r.code,{children:"statusBarTranslucent"})," ",(0,n.jsx)("div",{className:"label android"})]}),"\n",(0,n.jsxs)(r.p,{children:["A boolean prop to indicate whether ",(0,n.jsx)(r.code,{children:"StatusBar"})," should be translucent on ",(0,n.jsx)(r.code,{children:"Android"})," or not."]})]})}function p(e={}){const{wrapper:r}={...(0,t.R)(),...e.components};return r?(0,n.jsx)(r,{...e,children:(0,n.jsx)(c,{...e})}):c(e)}},28453:(e,r,o)=>{o.d(r,{R:()=>a,x:()=>d});var n=o(96540);const t={},i=n.createContext(t);function a(e){const r=n.useContext(i);return n.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function d(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:a(e.components),n.createElement(i.Provider,{value:r},e.children)}}}]);